PShape group;

void setup() {
  size(640, 360, P2D);
  group = createShape(GROUP);
  PShape star = createShape();
  star.beginShape();
  star.noFill();
  star.stroke(0,255,0);
  star.vertex(0, -50);
  star.vertex(14, -20);
  star.vertex(47, -15);
  star.vertex(23, 7);
  star.vertex(29, 40);
  star.vertex(0, 25);
  star.vertex(-29, 40);
  star.vertex(-23, 7);
  star.vertex(-47, -15);
  star.vertex(-14, -20);
  star.endShape(CLOSE);
  
  PShape won = createShape(RECT,-50,-50,100,100);
  won.setFill(false);
  won.setStroke(color(0,255,255));
  
  PShape path = createShape();
  path.beginShape();
  path.noFill();
  path.stroke(255,0,0);
  for (float a = -PI; a < 0; a += 0.1) {
    float r = random(60, 70);
    path.vertex(r*cos(a), r*sin(a));
  }
  path.endShape();
  
  PShape rectangle = createShape(RECT,-10,-10,20,20);
  rectangle.setFill(false);
  rectangle.setStroke(color(0,0,255));
  
  group.addChild(star);
  group.addChild(path);
  group.addChild(rectangle);  
  group.addChild(won);
}

void draw() {
  PShape rectangle = group.getChild(2);
  rectangle.rotate(0.1);
  PShape star = group.getChild(1);
  star.rotate(0.1);
  
  background(52);
  translate(mouseX, mouseY);
  shape(group);
}
